plugins {
    id 'com.gradle.plugin-publish' version '1.3.1'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'jacoco'
    id 'signing'
    id 'net.researchgate.release' version '3.1.0'
    id 'ru.vyarus.quality' version '6.0.0'
    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'
    id 'ru.vyarus.java-lib' version '3.0.0'
    id 'ru.vyarus.github-info' version '2.0.0'
    id 'com.github.ben-manes.versions' version '0.52.0'
    id "pl.droidsonroids.jacoco.testkit" version "1.0.12"
}

java {
    sourceCompatibility = 1.8
}

wrapper {
    gradleVersion = '8.14.3'
    distributionType = Wrapper.DistributionType.BIN
}

repositories { mavenLocal(); mavenCentral(); gradlePluginPortal() }
dependencies {
    implementation 'ru.vyarus:gradle-pom-plugin:3.0.0'

    testImplementation('org.spockframework:spock-core:2.4-M6-groovy-3.0') {
        exclude group: 'org.codehaus.groovy'
    }
    testImplementation 'com.gradle.publish:plugin-publish-plugin:1.3.1'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

group = 'ru.vyarus'
description = 'Gradle Java-lib plugin'

github {
    user = 'xvik'
    license = 'MIT'
}

maven.pom {
    developers {
        developer {
            id = 'xvik'
            name = 'Vyacheslav Rusakov'
            email = 'vyarus@gmail.com'
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {
            nexusUrl = uri("https://ossrh-staging-api.central.sonatype.com/service/local/")
            snapshotRepositoryUrl = uri("https://central.sonatype.com/repository/maven-snapshots/")
            username = findProperty('sonatypeUser')
            password = findProperty('sonatypePassword')
        }
    }
}

// skip signing for jitpack (snapshots)
tasks.withType(Sign).configureEach { onlyIf { !System.getenv('JITPACK') } }

// Required signing properties for release: signing.keyId, signing.password and signing.secretKeyRingFile
// (https://docs.gradle.org/current/userguide/signing_plugin.html#sec:signatory_credentials)

javaLib {
    // don't publish gradle metadata artifact
    withoutGradleMetadata()
}


gradlePlugin {
    plugins {
        javaLibPlugin {
            id = 'ru.vyarus.java-lib'
            displayName = project.description
            description = 'Common gradle configuration for Java or Groovy library'
            tags.set(['java', 'groovy', 'lib'])
            implementationClass = 'ru.vyarus.gradle.plugin.lib.JavaLibPlugin'
        }
    }
}

release.git.requireBranch.set('master')

afterReleaseBuild {
    dependsOn = [
            'publishMavenPublicationToSonatypeRepository',
            'closeAndReleaseSonatypeStagingRepository',
            publishPlugins
    ]
    doLast {
        logger.warn "RELEASED $project.group:$project.name:$project.version"
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events 'skipped', 'failed'
        exceptionFormat = 'full'
    }
    maxHeapSize = '2g'
    doLast {
        sleep(1000)
    }
}

dependencyUpdates.revision = 'release'
